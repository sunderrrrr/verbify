
services:
  postgres:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - whyai-net
    ports:
      - "5436:5432"
  migrate:
    image: migrate/migrate
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./backend/schema:/schema
    command:
      [
        "-path", "/schema",
        "-database=postgres://${DB_USER}:${DB_PASS}@postgres:5432/${DB_NAME}?sslmode=disable",
        "up"
      ]
    env_file:
      - ./backend/.env
    networks:
      - whyai-net

  backend:
    build:
      context: ./backend
    env_file:
      - ./backend/.env
    depends_on:
      postgres:
        condition: service_healthy
      migrate:
        condition: service_completed_successfully
    networks:
      - whyai-net
    ports:
      - "8090:8090"

  frontend:
    build:
      context: ./frontend/whyai-fr
      target: production
    env_file:
      - ./frontend/whyai-fr/.env
    networks:
      - whyai-net
    ports:
      - "3000:3000"
  redis:
    image: redis:7-alpine
    restart: always
    command: redis-server --save 60 1 --loglevel warning --requirepass ${REDIS_PASSWORD}
    volumes:
      - redisdata:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
      interval: 10s
      timeout: 3s
      retries: 3
    networks:
      - whyai-net
    ports:
      - "6379:6379"
volumes:
  pgdata:
  redisdata:
networks:
  whyai-net:
    driver: bridge